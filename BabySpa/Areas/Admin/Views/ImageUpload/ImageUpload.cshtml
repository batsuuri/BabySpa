@using BabySpa.Areas.Admin.Models;
@using BabySpa;
@model ImageViewModel
@Styles.Render("~/Content/Vendors")
@{
    ViewBag.Title = "ImageUpload Images";
}
@Html.Partial("_LeftMenu")
<div class="col-md-10">
    <div class="row">
        @{ string actionname = Model.DisplayMode == "WriteOnly" ? "Insert" : "Update";}
        @using (Html.BeginForm(actionname, "ImageUpload", null, FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
        {
            <div class="form-horizontal" id="custForm">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="text-muted bootstrap-admin-box-title">Image Detail</div>
                    </div>
                    <div class="bootstrap-admin-panel-content">
                      
                        @if (Model.CurrentImage != null)
                {
                            @Html.HiddenFor(model => model.CurrentImage.ImageName)
                            @Html.HiddenFor(model => model.CurrentImage.ImageUrl)

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            <div class="form-group">
                                <label class="control-label col-md-2">Image Name</label>
                                <div class="col-md-10">
                                    @Html.DisplayFor(model => model.CurrentImage.ImageName, new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-2">Select Image</label>
                                <div class="col-md-4">
                                    <div class="input-group">
                                        <span class="input-group-btn">
                                            <span class="btn btn-default btn-file">
                                                Browse… <input type="file" id="imgInp" name="file" accept="image/*">
                                            </span>
                                        </span>
                                        <input type="text" class="form-control" readonly>
                                    </div>
                                    <img id='img-upload' />
                                </div>
                                <label class="control-label col-md-2">Current Image</label>
                                <div class="col-md-4">
                                    @if (Func.ToStr(Model.CurrentImage.ImageUrl) != "")
                                    {
                                        <img id='Image' class="imagePreview" src="@(Url.Content("~/") + "Content/Tour/"+ Model.CurrentImage.ImageUrl)" />
                                    }
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-md-2">Select preview(small) Image</label>
                                <div class="col-md-4">
                                    <div class="input-group">
                                        <span class="input-group-btn">
                                            <span class="btn btn-default btn-file">
                                                Browse… <input type="file" id="imgInpSmall" name="fileSmall" accept="image/*">
                                            </span>
                                        </span>
                                        <input type="text" class="form-control" readonly>
                                    </div>
                                    <img id='img-uploadSmall' />
                                </div>
                                <label class="control-label col-md-2">Current preview Image</label>
                                <div class="col-md-4">
                                    @if (Func.ToStr(Model.CurrentImage.ImageUrl) != "")
                                    {
                                        <img id='smallImage' class="imagePreview" src="@(Url.Content("~/") + "Content/Tour/" + Helper.GetPreviewImageUrl(Model.CurrentImage.ImageUrl,false))" />
                                    }
                                </div>
                            </div>
                        }
                        <div class="form-group">
                            <div class="pull-right">
                                <div class="col-lg-12">
                                    @if (Model.DisplayMode != "WriteOnly")
                                    {
                                        @Html.ActionLink("New Image", "New", "ImageUpload", null, new { @class = "btn btn-default" })
                                    }

                                    @if (Model.DisplayMode != "ReadOnly" && Model.CurrentImage != null)
                                    {
                                        <button type="submit" name="submit" class="btn btn-primary" value="save" id="save">Save</button>
                                    }
                                    @if (Model.DisplayMode == "EditOnly" && Model.CurrentImage != null)
                                    {
                                        <button type="button" data-toggle="modal" data-target="#myModal" class="btn btn-primary" id="delete">Delete</button>
                                        <div id="myModal" class="modal fade" role="dialog">
                                            <div class="modal-dialog">
                                                <!-- Modal content-->
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                        <h4 class="modal-title">Delete Image</h4>
                                                    </div>
                                                    <div class="modal-body">
                                                        <b>You realy wanna delete this Image?</b>
                                                        <br /><i>Delete operation is cannot undo!!!</i>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                                        @Html.ActionLink("Delete anyway", "Delete", "ImageUpload", new { id = Model.CurrentImage.ImageName.Replace('.','~') }, new { @class = "btn btn-default" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        @if (Func.ToStr(ViewBag.Result) != "")
                {
                            <div class="form-group alert alert-info mt10">
                                <a class="close" data-dismiss="alert" href="#">&times;</a>
                                <label class="col-lg-10 control-label" for="inputError" id="ResultMessage">@ViewBag.Result</label>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="panel panel-default" id="ImageContent">
                <div class="panel-heading">
                    <div class="text-muted bootstrap-admin-box-title">
                        Image List @(Model.List != null ? ":  " + Model.List.Count + " records found." : "")
                    </div>
                </div>
                <div class="bootstrap-admin-panel-content">
                    @if (Model.List != null)
                    {
                        <table class="table">
                            <tr>
                                <th>
                                    Image Name
                                </th>
                                <th>
                                Extension
                                </th>
                               
                                <th>
                                    Picture
                                </th>
                            </tr>

                            @foreach (var item in Model.List)
                    {
                                <tr>
                                    <td>
                                        @Html.ActionLink(item.ImageName, "Edit", "ImageUpload", new { id = item.ImageName.Replace('.', '~') },null)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.ImageExt)
                                    </td>
                                   
                                    <td>
                                        @if (Func.ToStr(item.ImageUrl) != "")
                                        {
                                            <img class="imagePreview" src="@(Url.Content("~/") + "Content/Tour/"+Helper.GetPreviewImageUrl(item.ImageUrl))" />
                                        }
                                    </td>
                                </tr>
                            }

                        </table>
                    }
                </div>
                @Html.HiddenFor(model => model.DisplayMode)
                @Html.HiddenFor(model => model.ImageName)
            </div>
            
        }
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/vendors")
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

    $(function () {
     
        $(document).on('change', '.btn-file :file', function () {
            var input = $(this),
                label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
            input.trigger('fileselect', [label]);
        });

        $('.btn-file :file').on('fileselect', function (event, label) {

            var input = $(this).parents('.input-group').find(':text'),
                log = label;

            if (input.length) {
                input.val(log);
            } else {
                if (log) alert(log);
            }

        });
        function readURL(input, imgname) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $(imgname).attr('src', e.target.result);
                }

                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imgInp").change(function () {
            readURL(this, '#img-upload');
        });
        $("#imgInpSmall").change(function () {
            readURL(this, '#img-uploadSmall');
        });

    });
    </script>
}